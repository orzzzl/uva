#include <bits/stdc++.h>
using namespace std;

int tests;
vector <int> adj [30];
int rec [30];

int recNum () {
    int sum = 0;
    for (int i = 0; i < 30; i ++)
	sum += rec [i];
    return sum;
}

int main () {
    cin >> tests;
    while (tests --) {
	string s;
	for (int i = 0; i < 30; i ++)    adj.clear ();
	memset (rec, 0, sizeof rec);
	while (1) {
	getline (cin, s);
        if (s [0] == '*')    break;
	int firstLetter = s [1] - 'A';
	int secondLetter = s [3] - 'A';
	adj [firstLetter].push_back (secondLetter);
	adj [secondLetter].push_back (firstLetter);
    }
    string s;
    cin >> s;
    int trees = 0, acorns = 0;
    for (int i = 0; i < s.size (); i ++) {
	if (s [i] < 'A' || s [i] > 'Z')
            continue;
        int num = s [i] - 'A';
	if (rec [num])    continue;
	int pre = recNum ();
	dfs (num);
	int after = recnum ();
	if (after - pre == 1)    acorns ++;
	else    trees ++;
    }
    printf ("There are %d tree(s) and %d acorn(s).\n", trees, acorns);
} 
    return 0;
}
